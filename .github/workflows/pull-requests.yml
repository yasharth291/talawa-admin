name: PR Workflow
on:
  pull_request:
    branches:
      - '**'  
  push:
    branches:
      - '**'      
jobs:
  
  Linter:
    name: Lints the code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Dependencies
        run: yarn
      - name: Run ESLint 
        run: yarn lint

  Continuous-Integration:
    name: continuous integration on pull request
    runs-on: ubuntu-latest
    needs: Linter
    steps:
      - uses: actions/checkout@v2
      - name: Install Dependencies
        run: yarn
      - name: Run tests
        run: yarn test
  
  Code-Coverage:
    name: ci
    runs-on: ubuntu-latest
    steps:
      - name: Checkout ðŸ›Ž
      - uses: actions/checkout@v2

      - name: Install NPM dependencies ðŸ“¦
        run: yarn

      - name: Unit tests ðŸ§ª
        run: yarn test

      - name: Check all covered files ðŸ“Š
        run: |
          node bin/check-coverage main1.js
          node bin/check-coverage to/main2.js
          node bin/only-covered main1.js main2.js
          # and can check multiple files at once
          node bin/check-coverage main1.js main2.js
      - name: Check totals ðŸ›¡
        run: node bin/check-total --min 30

      - name: Set commit status using REST
        # https://developer.github.com/v3/repos/statuses/
        run: |
          curl --request POST \
          --url https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.sha }} \
          --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          --header 'content-type: application/json' \
          --data '{
              "state": "success",
              "description": "REST commit status",
              "context": "a test"
            }'
      - name: Set code coverage commit status ðŸ“«
        run: node bin/set-gh-status
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check coverage change from README ðŸ“«
        run: node bin/set-gh-status --check-against-readme
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update code coverage badge ðŸ¥‡
        run: node bin/update-badge

      - name: Semantic Release ðŸš€
        uses: cycjimmy/semantic-release-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  CodeQL:
    name: Analyse code with codeQL
    runs-on: ubuntu-latest
    needs: Continuous-Integration
    strategy:
      fail-fast: false
      matrix:
        language: [ 'javascript' ]
    steps:
       - name: Checkout repository
         uses: actions/checkout@v2

       - name: Initialize CodeQL
         uses: github/codeql-action/init@v1
         with:
          languages: ${{ matrix.language }}

       - name: Autobuild
         uses: github/codeql-action/autobuild@v1

       - name: Perform CodeQL Analysis
         uses: github/codeql-action/analyze@v1
